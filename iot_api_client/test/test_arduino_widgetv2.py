# coding: utf-8

"""
    Arduino IoT Cloud API

     Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import iot_api_client
from iot_api_client.models.arduino_widgetv2 import ArduinoWidgetv2  # noqa: E501
from iot_api_client.rest import ApiException

class TestArduinoWidgetv2(unittest.TestCase):
    """ArduinoWidgetv2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ArduinoWidgetv2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = iot_api_client.models.arduino_widgetv2.ArduinoWidgetv2()  # noqa: E501
        if include_optional :
            return ArduinoWidgetv2(
                has_permission_incompatibility = True, 
                has_type_incompatibility = True, 
                has_unlinked_variable = True, 
                height = 56, 
                height_mobile = 56, 
                id = '0', 
                name = '0', 
                options = { }, 
                type = 'slider, gauge', 
                variables = [
                    iot_api_client.models.mediatype_identifier:_application/vnd/arduino/linkedvariable+json;_view=default.Mediatype identifier: application/vnd.arduino.linkedvariable+json; view=default(
                        id = '0', 
                        last_value = null, 
                        last_value_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        permission = '0', 
                        thing_id = '0', 
                        thing_name = '0', 
                        thing_timezone = iot_api_client.models.mediatype_identifier:_application/vnd/arduino/timezone+json;_view=default.Mediatype identifier: application/vnd.arduino.timezone+json; view=default(
                            name = '0', 
                            offset = 56, 
                            until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '0', 
                        variable_name = '0', )
                    ], 
                width = 56, 
                width_mobile = 56, 
                x = 56, 
                x_mobile = 56, 
                y = 56, 
                y_mobile = 56
            )
        else :
            return ArduinoWidgetv2(
                height = 56,
                id = '0',
                options = { },
                type = 'slider, gauge',
                width = 56,
                x = 56,
                y = 56,
        )

    def testArduinoWidgetv2(self):
        """Test ArduinoWidgetv2"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
