# coding: utf-8

"""
    Arduino IoT Cloud API

    Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

import iot_api_client
from iot_api_client.models.devicev2_otaurlpyalod import Devicev2Otaurlpyalod  # noqa: E501
from iot_api_client.rest import ApiException

class TestDevicev2Otaurlpyalod(unittest.TestCase):
    """Devicev2Otaurlpyalod unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Devicev2Otaurlpyalod
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Devicev2Otaurlpyalod`
        """
        model = iot_api_client.models.devicev2_otaurlpyalod.Devicev2Otaurlpyalod()  # noqa: E501
        if include_optional :
            return Devicev2Otaurlpyalod(
                binary_key = 'ota/z/AMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJysota', 
                sha256 = '62ECB020842930cc01FFCCfeEe150AC32DcAEc8a83DDD7dBF7567C88195ffcea', 
                user_id = ''
            )
        else :
            return Devicev2Otaurlpyalod(
        )
        """

    def testDevicev2Otaurlpyalod(self):
        """Test Devicev2Otaurlpyalod"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
