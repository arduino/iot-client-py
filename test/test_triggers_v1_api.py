# coding: utf-8

"""
    Arduino IoT Cloud API

    Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iot_api_client.api.triggers_v1_api import TriggersV1Api


class TestTriggersV1Api(unittest.TestCase):
    """TriggersV1Api unit test stubs"""

    def setUp(self) -> None:
        self.api = TriggersV1Api()

    def tearDown(self) -> None:
        pass

    def test_actions_v1_create(self) -> None:
        """Test case for actions_v1_create

        create actions_v1
        """
        pass

    def test_actions_v1_delete(self) -> None:
        """Test case for actions_v1_delete

        delete actions_v1
        """
        pass

    def test_actions_v1_list(self) -> None:
        """Test case for actions_v1_list

        list actions_v1
        """
        pass

    def test_actions_v1_show(self) -> None:
        """Test case for actions_v1_show

        show actions_v1
        """
        pass

    def test_actions_v1_update(self) -> None:
        """Test case for actions_v1_update

        update actions_v1
        """
        pass

    def test_triggers_v1_create(self) -> None:
        """Test case for triggers_v1_create

        create triggers_v1
        """
        pass

    def test_triggers_v1_delete(self) -> None:
        """Test case for triggers_v1_delete

        delete triggers_v1
        """
        pass

    def test_triggers_v1_list(self) -> None:
        """Test case for triggers_v1_list

        list triggers_v1
        """
        pass

    def test_triggers_v1_patch(self) -> None:
        """Test case for triggers_v1_patch

        patch triggers_v1
        """
        pass

    def test_triggers_v1_show(self) -> None:
        """Test case for triggers_v1_show

        show triggers_v1
        """
        pass

    def test_triggers_v1_template(self) -> None:
        """Test case for triggers_v1_template

        template triggers_v1
        """
        pass

    def test_triggers_v1_update(self) -> None:
        """Test case for triggers_v1_update

        update triggers_v1
        """
        pass


if __name__ == '__main__':
    unittest.main()
